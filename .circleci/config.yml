
version: 2.1

jobs:
  build:
    working_directory: ~/joknuden
    environment:
      DOCKER_BUILDKIT: 1
      #BUILDX_PLATFORMS: linux/amd64,linux/arm64,linux/ppc64le,linux/s390x,linux/386,linux/arm/v7,linux/arm/v6
      BUILDX_PLATFORMS: linux/arm64
    docker:
      - image: cimg/node:lts
        auth:
          username: $DOCKER_HUB_USERNAME
          password: $DOCKER_HUB_ACCESS_TOKEN
    steps:
      - checkout
      - setup_remote_docker:
          #version: 19.03.13
          version: 20.10.7
          #docker_layer_caching: true

    #   - run: apk add make curl
    #   - run: mkdir -vp ~/.docker/cli-plugins/
    #   - run: curl --silent -L --output ~/.docker/cli-plugins/docker-buildx https://github.com/docker/buildx/releases/download/v0.3.1/buildx-v0.3.1.linux-amd64
    #   - run: chmod a+x ~/.docker/cli-plugins/docker-buildx
    #   - run: docker buildx version
      - run:
          name: Install buildx
          command: |
            BUILDX_BINARY_URL="https://github.com/docker/buildx/releases/download/v0.7.1/buildx-v0.7.1.linux-amd64"

            curl --output docker-buildx \
              --silent --show-error --location --fail --retry 3 \
              "$BUILDX_BINARY_URL"

            mkdir -p ~/.docker/cli-plugins

            mv docker-buildx ~/.docker/cli-plugins/
            chmod a+x ~/.docker/cli-plugins/docker-buildx

            docker buildx install
            # Run binfmt
            docker run --rm --privileged tonistiigi/binfmt:latest --install "$BUILDX_PLATFORMS"

      - run: docker buildx version
      - run: docker buildx ls
      - run: docker context create mycontext
      - run: docker buildx create --name mybuilder --use mycontext
      # - run: docker buildx create --name multiarch-builder --driver docker-container --use mycontext
      - run: docker buildx inspect --bootstrap
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/joknuden.tar | true
      - run:
          name: Build application Docker image
          command: |
            #docker build --cache-from=joknuden -t joknuden .
            #docker buildx build --cache-from=joknuden --platform "$BUILDX_PLATFORMS" .
            # docker buildx build -t joknuden --platform "$BUILDX_PLATFORMS" .
            docker buildx build --tag=test123 --platform "$BUILDX_PLATFORMS" .
      - run: docker image ls
    #   - run:
    #       name: Save Docker image layer cache
    #       command: |
    #         mkdir -p /caches
    #         docker save -o /caches/joknuden.tar joknuden
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/joknuden.tar
      - deploy:
          name: Push application Docker image
          command: |
            docker login -u "${DOCKER_HUB_USERNAME}" -p "${DOCKER_HUB_ACCESS_TOKEN}"
            # docker tag joknuden "vegarda/joknuden:${CIRCLE_SHA1}"
            # docker push "vegarda/joknuden:${CIRCLE_SHA1}"
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker tag joknuden vegarda/joknuden:latest
              docker push vegarda/joknuden:latest
            fi



workflows:
  build-workflow:
    jobs:
      - build:
          context: docker-hub
